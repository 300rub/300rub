<project name="ss" default="build" basedir="/var/www">

    <target name="clear-logs">
        <echo>Removing all log files</echo>
        <delete>
            <fileset dir="tmp/logs" includes="**/*.log"/>
        </delete>
    </target>

    <target name="composer">
        <echo>Vendors updating</echo>
        <exec executable="php">
            <arg value='composer.phar' />
            <arg value='install' />
        </exec>
        <exec executable="php">
            <arg value='composer.phar' />
            <arg value='update' />
        </exec>
    </target>

    <target name="clear-db">
        <exec executable="php" failonerror="true">
            <arg value='bin/run-php-command' />
            <arg value='clearDb' />
        </exec>
    </target>

    <target name="clear-memcached">
        <exec executable="php" failonerror="true">
            <arg value='bin/run-php-command' />
            <arg value='clearMemcached' />
        </exec>
    </target>

    <target name="public-vendor">
        <exec executable="php" failonerror="true">
            <arg value='bin/run-php-command' />
            <arg value='publicVendor' />
        </exec>
    </target>

    <target name="create-sql-dumps">
        <exec executable="php" failonerror="true">
            <arg value='bin/run-php-command' />
            <arg value='createSqlDumps' />
        </exec>
    </target>

    <target name="migrate">
        <exec executable="php" failonerror="true">
            <arg value='bin/run-php-command' />
            <arg value='migrate' />
        </exec>
    </target>

    <target name="load-fixtures">
        <exec executable="php" failonerror="true">
            <arg value='bin/run-php-command' />
            <arg value='loadFixtures' />
        </exec>
    </target>

    <target name="load-test-fixtures">
        <exec executable="php" failonerror="true">
            <arg value='bin/run-php-command' />
            <arg value='loadFixtures' />
            <arg value='test' />
        </exec>
    </target>

    <target name="rollback-sql-dumps">
        <exec executable="php" failonerror="true">
            <arg value='bin/run-php-command' />
            <arg value='rollbackSqlDumps' />
        </exec>
    </target>

    <target name="phpcs" description="Check code with PHP Code Sniffer">
        <exec executable="./vendor/squizlabs/php_codesniffer/bin/phpcs">
            <arg value="--ignore=tmp/backups/,bin/,docker/,tmp/logs/,public/*/lib,trash,vendor,config/" />
            <arg value="--standard=config/code/phpcs/generic.xml,config/code/phpcs/pear.xml,config/code/phpcs/psr1.xml,config/code/phpcs/psr2.xml,config/code/phpcs/squiz.xml,config/code/phpcs/zend.xml" />
            <arg path="${path}" />
        </exec>
    </target>

    <target name="phpcbf" description="Fixing code with PHP Code Sniffer">
        <exec executable="./vendor/squizlabs/php_codesniffer/bin/phpcbf">
            <arg value="--ignore=tmp/backups/,bin/,docker/,tmp/logs/,public/*/lib,trash,vendor,config/" />
            <arg value="--standard=config/code/phpcs/generic.xml,config/code/phpcs/pear.xml,config/code/phpcs/psr1.xml,config/code/phpcs/psr2.xml,config/code/phpcs/squiz.xml,config/code/phpcs/zend.xml" />
            <arg path="${path}" />
        </exec>
    </target>

    <target name="phpmd" description="PHPMD - PHP Mess Detector">
        <exec executable="./vendor/phpmd/phpmd/src/bin/phpmd">
            <arg path="${path}" />
            <arg value="text" />
            <arg value="config/code/phpmd/cleancode.xml,config/code/phpmd/codesize.xml,config/code/phpmd/controversial.xml,config/code/phpmd/design.xml,config/code/phpmd/naming.xml,config/code/phpmd/unusedcode.xml" />
            <arg value="--exclude" />
            <arg value="tmp/backups/,bin/,docker/,tmp/logs/,public/*/lib,trash,vendor,config/" />
        </exec>
    </target>

    <target name="full-php-check" depends="phpcs, phpmd, jshint">
    </target>

    <target name="lesshint" description="Lesshint is a tool to aid you in writing clean and consistent Less.">
        <exec executable="lesshint">
            <arg path="${path}" />
            <arg value="--config" />
            <arg path="config/code/lesshint.json" />
        </exec>
    </target>

    <target name="jshint" description="JSHint, a JavaScript Code Quality Tool">
        <exec executable="jshint">
            <arg path="${path}" />
            <arg value="--config" />
            <arg path="config/code/jshint.json" />
            <arg value="--exclude" />
            <arg value="vendor,tmp/backups,bin,docker,tmp/logs,trash,public/js/lib" />
        </exec>
    </target>

    <target name="phpunit" depends="create-sql-dumps, clear-db, clear-memcached, migrate, load-test-fixtures">
        <exec executable="php" failonerror="true">
            <arg value='vendor/phpunit/phpunit/phpunit' />
            <arg value='--bootstrap=tests/unit/bootstrap.php' />
            <arg value='${path}' />
        </exec>

        <antcall target="rollback-sql-dumps" />
    </target>

    <target name="paratest">
        <exec executable="php" failonerror="true">
            <arg value='vendor/brianium/paratest/bin/paratest' />
            <arg value='--bootstrap=tests//selenium/bootstrap.php' />
            <arg value='-p 1' />
            <arg value='-f' />
            <arg value='tests/selenium' />
        </exec>
    </target>

    <target name="prepare" depends="clear-logs">
        <delete dir="tmp/backups" />
        <mkdir dir="tmp/backups" />
        <delete dir="public/upload" />
        <mkdir dir="public/upload" />
        <mkdir dir="public/upload/1" />
        <exec executable="chmod" failonerror="true">
            <arg line="-R 0777 public/upload" />
        </exec>
    </target>

    <target name="build" depends="prepare, clear-db, clear-memcached, migrate, load-fixtures">
    </target>

</project>