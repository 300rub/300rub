<?xml version="1.0" encoding="UTF-8"?>
<project name="release">
    <taskdef resource="net/sf/antcontrib/antlib.xml">
    </taskdef>

    <target name="release-update-number">
        <echo file="${basedir}/config/release" append="false">${release}</echo>
    </target>

    <target name="release-check-folders">
        <exec executable="mkdir" failonerror="true">
            <arg value="-p" />
            <arg value="-m" />
            <arg value="0777" />
            <arg value="${basedir}/../../releases" />
        </exec>
        <exec executable="mkdir" failonerror="true">
            <arg value="-p" />
            <arg value="-m" />
            <arg value="0777" />
            <arg value="${basedir}/../../releases/archives" />
        </exec>
        <exec executable="mkdir" failonerror="true">
            <arg value="-p" />
            <arg value="-m" />
            <arg value="0777" />
            <arg value="${basedir}/../../releases/upload" />
        </exec>
    </target>

    <target name="release-prepare-rsa">
        <exec executable="mkdir" failonerror="true">
            <arg value="-p" />
            <arg value="/root/.ssh" />
        </exec>
        <exec executable="cp" failonerror="true">
            <arg value="/root/.ssh-tmp/id_rsa.pub" />
            <arg value="/root/.ssh/id_rsa.pub" />
        </exec>
        <exec executable="cp" failonerror="true">
            <arg value="/root/.ssh-tmp/id_rsa" />
            <arg value="/root/.ssh/id_rsa" />
        </exec>
    </target>

    <target name="release-archive" depends="release-check-folders">
        <exec executable="tar" failonerror="true">
            <arg value="--exclude=./.git" />
            <arg value="--exclude=./.idea" />
            <arg value="-zcf" />
            <arg value="${basedir}/../../releases/archives/release-${release}.tar.gz" />
            <arg value="." />
        </exec>
        <exec executable="chmod" failonerror="true">
            <arg value="0777" />
            <arg value="${basedir}/../../releases/archives/release-${release}.tar.gz" />
        </exec>
    </target>

    <target name="release-upload" depends="release-check-folders">
        <for list="${release.hosts}" param="server" parallel="true" keepgoing="false">
            <sequential>
                <property name="server" value="@{server}" />
                <scp
                    file="${basedir}/../../releases/archives/release-${release}.tar.gz"
                    todir="${release.user}@${server}:${release.dir}/releases/upload/release-${release}.tar.gz"
                    keyfile="${user.home}/.ssh/id_rsa"
                    trust="yes"
                    sftp="true"
                />
            </sequential>
        </for>
    </target>

    <target name="release-extract">
        <for list="${release.hosts}" param="server" parallel="false" keepgoing="false">
            <sequential>
                <property name="server" value="@{server}" />
                <property name="archive" value="${release.dir}/releases/upload/release-${release}.tar.gz" />
                <property name="folder" value="${release.dir}/code/release-${release}" />

                <sshexec
                    host="${server}"
                    username="${release.user}"
                    keyfile="${user.home}/.ssh/id_rsa"
                    trust="yes"
                    failonerror="true"
                    command="mkdir -p ${folder}; tar -xf ${archive} -C ${folder}"
                />
            </sequential>
        </for>
    </target>

    <target name="release-change-link">
        <for list="${release.hosts}" param="server" parallel="false" keepgoing="false">
            <sequential>
                <property name="server" value="@{server}" />

                <sshexec
                        host="${server}"
                        username="${release.user}"
                        keyfile="${user.home}/.ssh/id_rsa"
                        trust="yes"
                        failonerror="true"
                        command="cd ${release.dir}/code; ln -sfn release-${release} live"
                />
            </sequential>
        </for>
    </target>

    <target name="release-make" depends="tools-git-reset, release-prepare-rsa, release-update-number, tools-composer-install, tools-public-vendor, tools-generate-static, test-phpunit-reload-fixtures, release-archive, release-upload, release-extract, release-change-link">
    </target>
</project>
